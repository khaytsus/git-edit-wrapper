#!/bin/sh

mebin=/usr/local/bin/me-bin
restorecon=/sbin/restorecon
getenforce=/usr/sbin/getenforce
autogit=1

file=$1

if [ "$file" == "" ]; then
 $mebin
 exit
fi

if [ -d "$file" ]; then
 echo "$file is a directory, aborting.."
 exit
fi

# Test to see if we have write permissions, then clean up
filetest=`head /dev/urandom | md5sum | cut -f 1 -d " "`
filetest=${file}-${filetest}
touch $filetest >/dev/null 2>&1
rc=$?
if [ $rc != 0 ]; then
        echo "Could not create $file (no permissions?)  Using more instead"
	more $file
	exit
fi
rm $filetest

if [ -h "$file" ]; then
 file=`readlink -f $file`
 if [ -d "$file" ]; then
  echo "$file is a directory, aborting.."
  exit
 else
  $mebin "$file"
 fi
else
 $mebin "$file"
fi

# If we didn't create a file, just exit
if [ ! -f "$file" ]; then
 exit
fi

# If using selinux, restore our contexts
if $getenforce | grep -q 'Enforcing\|Permissive'
then
 $restorecon "$file"
fi

# If the file is in a git repo, check in the change
dir=`dirname $file`
filename=`basename $file`
pwd=`pwd`

cd $dir
if [ -d ".git" ]; then
  diff=`git diff $filename`
  if [ "$diff" != "" ]; then
    git add $filename
    echo -n ".git found, commit message: "
    read commit
    if [ "$commit" = "" ]; then
      commit="Automatic emacs script checkin"
    fi
    git commit -q -m "$commit"
  else
    echo no changes
  fi
else
  if [ "$autogit" = "1" ]; then
    git init -q
    git add $filename
    git commit -q -m "Creating repo and adding $filename"
    cd $pwd
  else
    echo "cd $dir && git init && git add $filename && git commit -m \"Adding $filename\" && cd $pwd"
  fi
fi
